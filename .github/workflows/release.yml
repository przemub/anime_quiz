name: Release master branch

on:
  push:
    branches: ["master"]

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build the stack
        run: >
          touch .env &&
          docker network create server &&
          docker compose -f docker-compose.yml -f docker-compose.dev.yml up -d
      - name: Check running containers
        run: docker compose -f docker-compose.yml -f docker-compose.dev.yml ps -a
      - name: Check logs
        run: docker compose -f docker-compose.yml -f docker-compose.dev.yml logs
      - name: Run test suite
        run: >
          docker compose -f docker-compose.yml -f docker-compose.dev.yml
          run --rm -w "/usr/local/lib/python3.12/site-packages/quiz" anime_quiz
          django-admin test -t "/usr/local/lib/python3.12/site-packages/quiz"
  release:
    name: Push to Docker Hub
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - uses: actions/checkout@v4
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Set commit short ID
      id: short_id
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        platforms: linux/amd64,linux/arm64
        push: true
        tags: przemub/anime_quiz:latest,przemub/anime_quiz:${{ steps.short_id.outputs.sha_short }}
  deploy:
    name: Deploy on the official instance
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Connect via SSH
      uses: appleboy/ssh-action@v1.2.0
      with:
        username: ${{ secrets.USER }}
        host: ${{ secrets.HOST }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        script: |
          cd przemub2/anime_quiz
          git pull
          docker compose -f docker-compose.yml -f docker-compose.opentelemetry.yml pull
          docker compose -f docker-compose.yml -f docker-compose.opentelemetry.yml build --pull
          docker compose -f docker-compose.yml -f docker-compose.opentelemetry.yml run --rm -v "$(pwd)/static:/app/static" --user $(id -u):$(id -g) anime_quiz python manage.py collectstatic --no-input
          docker compose -f docker-compose.yml -f docker-compose.opentelemetry.yml build --pull
          docker compose -f docker-compose.yml -f docker-compose.opentelemetry.yml up -d
          docker system prune -f


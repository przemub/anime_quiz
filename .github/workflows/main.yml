name: Test and deploy to quiz.moe

on:
  push:
    branches:
      - master

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build the stack
        run: >
          touch .env &&
          docker network create server &&
          docker-compose -f docker-compose.yml -f docker-compose.dev.yml up -d
      - name: Check running containers
        run: docker-compose -f docker-compose.yml -f docker-compose.dev.yml ps -a
      - name: Check logs
        run: docker-compose -f docker-compose.yml -f docker-compose.dev.yml logs
      - name: Run test suite
        run: docker-compose -f docker-compose.yml -f docker-compose.dev.yml exec -T anime_quiz python manage.py test

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Update server-side repository
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ${{ secrets.DIRECTORY }}
            git pull
      - name: Build Docker images
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ${{ secrets.DIRECTORY }}
            docker-compose build
      - name: Ensure the containers are started
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ${{ secrets.DIRECTORY }}
            docker-compose up -d
      - name: Collect static files
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ${{ secrets.DIRECTORY }}
            docker-compose exec -T anime_quiz python manage.py collectstatic --no-input
